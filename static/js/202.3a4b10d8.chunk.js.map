{"version":3,"file":"static/js/202.3a4b10d8.chunk.js","mappings":"2VAIaA,GAAsBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAY,yNACzB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,gBAAgB,IAMxC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,MAAM,IAG9CC,EAAYR,EAAAA,EAAAA,IAAU,8TAetBS,GAAqBT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAoB,oNAEzC,SAAAE,GAAK,OAAIA,EAAMC,MAAMG,OAAOK,WAAW,IAC5B,SAAAT,GAAK,OAAIA,EAAMC,MAAMG,OAAOM,QAAQ,IACtC,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,gBAAgB,IAIxC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,MAAM,IAG9CM,EAAab,EAAAA,EAAAA,OAAa,6TAEjB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAMU,MAAM,IAE/B,SAAAZ,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,MAAM,IAW7CQ,EAAsBf,EAAAA,EAAAA,IAAU,4YAoBhCgB,EAAqBhB,EAAAA,EAAAA,EAAQ,mEAE7B,SAAAE,GAAK,OAAIA,EAAMC,MAAMG,OAAOK,WAAW,IAGvCM,EAAajB,EAAAA,EAAAA,OAAa,0TAElB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAMU,MAAM,IAE9B,SAAAZ,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,MAAM,IAOpC,SAAAL,GAAK,OAAIA,EAAMC,MAAMG,OAAOM,QAAQ,G,kFCzF7CM,EAAgBlB,EAAAA,EAAAA,QAAc,mKAGxB,SAAAE,GAAK,OAAIA,EAAMC,MAAMG,OAAOa,WAAW,IACrC,SAAAjB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,gBAAgB,IAInDe,EAAepB,EAAAA,EAAAA,GAAS,qE,SCMrC,EAbgB,SAAH,GAA2B,IAAtBqB,EAAK,EAALA,MAAOC,EAAQ,EAARA,SACrB,OACI,UAACJ,EAAa,WACTG,IAAU,SAACD,EAAY,UAAEC,IACzBC,IAGb,C,yJCPaC,GAAkBvB,E,QAAAA,GAAOC,EAAAA,GAAPD,CAAY,yNACrB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,gBAAgB,IAMxC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,MAAM,I,mBC4C3D,EA9CkB,WACd,IAAMiB,GAAUC,EAAAA,EAAAA,MACVC,GAAaD,EAAAA,EAAAA,MACbE,GAAWC,EAAAA,EAAAA,MAOXC,EAAY,yCAAG,WAAOC,EAAQC,GAAO,sFACjCJ,GAASK,EAAAA,EAAAA,IAAMF,IAAS,KAAD,EAC7BC,EAAQE,YAAY,2CACvB,gBAHiB,wCAIdC,EAASC,EAAAA,KAAaC,MAAM,CAC5BC,MAAOF,EAAAA,KAAaG,SAAS,YAC7BC,SAAUJ,EAAAA,KAAaG,SAAS,cAGpC,OACI,SAAC,KAAM,CACHE,cAhBQ,CACZH,MAAO,GACPE,SAAU,IAeNE,iBAAkBP,EAClBQ,SAAUb,EAAa,UAEvB,UAACN,EAAe,YACZ,UAAC,KAAS,YACN,mBAAOoB,QAASnB,EAAQ,UAAC,SAErB,SAAC,KAAK,CAACoB,KAAK,QAAQC,GAAIrB,EAASsB,KAAK,QAAQC,YAAY,sBAE9D,SAAC,KAAkB,CAACD,KAAK,QAAQE,UAAU,YAE/C,UAAC,KAAS,YACN,mBAAOL,QAASjB,EAAW,UAAC,YAExB,SAAC,KAAK,CAACkB,KAAK,OAAOC,GAAInB,EAAYoB,KAAK,WAAWC,YAAY,uBAEnE,SAAC,KAAkB,CAACD,KAAK,WAAWE,UAAU,YAElD,SAAC,KAAU,CAACJ,KAAK,SAAQ,SAAC,eAI1C,E,oBCtCA,EAVc,WACV,OACI,SAAC,IAAS,WACN,SAACK,EAAA,EAAO,CAAC5B,MAAM,aAAY,UACvB,SAAC,EAAS,OAI1B,C","sources":["components/PhoneBook/PhoneBook.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { Form, ErrorMessage } from 'formik';\r\n\r\n\r\nexport const PhoneBookFormStyled = styled(Form)`\r\n    border-radius:  ${props => props.theme.radii.cardBorderRadius}px;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    border: 1px solid  ${props => props.theme.colors.border};\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n    &>label{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        align-items: flex-start;\r\n        &>input{\r\n            display: inline-block;\r\n\r\n            margin-top: 5px;\r\n        }\r\n    }\r\n`;\r\nexport const ErrorMessageStyled = styled(ErrorMessage)`\r\n    width: 100%;\r\n    color: ${props => props.theme.colors.dangerColor}; \r\n    background-color: ${props => props.theme.colors.dangerBg};\r\n    border-radius:  ${props => props.theme.radii.cardBorderRadius}px;\r\n    margin-top: 5px;\r\n    text-align: center;\r\n    padding: 10px;\r\n    border: 1px solid  ${props => props.theme.colors.border};\r\n`; \r\n\r\nexport const FormButton = styled.button`\r\n    display: inline-block;\r\n    border-radius:  ${props => props.theme.radii.button}px;\r\n    outline: none;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    background: cardBgColorDarker;\r\n    padding: 10px 20px;\r\n    margin-top: 20px;\r\n    cursor: pointer;\r\n    transition: opacity 250ms linear;\r\n    &:hover{\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n\r\nexport const PhoneBookListStyled = styled.div`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    &>li{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        &:not(:last-child){\r\n            margin-bottom: 10px;\r\n        }\r\n        &>p{\r\n            margin: 0 20px 0 0;\r\n            &>span{\r\n                font-weight: 700;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PhoneBookListEmpty = styled.p`\r\n    text-align: center;\r\n    color: ${props => props.theme.colors.dangerColor}; \r\n`;\r\n\r\nexport const ListButton = styled.button`\r\n    display: inline-block;\r\n    border-radius: ${props => props.theme.radii.button}px;\r\n    outline: none;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    background: cardBgColorDarker;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n    transition: all 250ms linear;\r\n    &:hover{\r\n        opacity: 0.5;\r\n        background: ${props => props.theme.colors.dangerBg};\r\n    }\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const SectionStyled = styled.section`\r\n    padding: 40px 0;\r\n    margin: 40px auto;\r\n    background:  ${props => props.theme.colors.cardBgColor};\r\n    border-radius: ${props => props.theme.radii.cardBorderRadius}px;\r\n    overflow: hidden;\r\n    padding: 30px;\r\n`;\r\nexport const SectionTitle = styled.h2`\r\n    text-align: center;\r\n    margin-top: 0;\r\n`;","import PropTypes from 'prop-types';\r\nimport { SectionStyled, SectionTitle } from './Section.styled';\r\n\r\nconst Section = ({title, children}) => {\r\n    return(\r\n        <SectionStyled>\r\n            {title && (<SectionTitle>{title}</SectionTitle>)} \r\n            {children}\r\n        </SectionStyled>\r\n    )\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Section;","import styled from '@emotion/styled';\r\nimport { Form } from 'formik';\r\n\r\nexport const LoginFormStyled = styled(Form)`\r\n    border-radius:  ${props => props.theme.radii.cardBorderRadius}px;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    border: 1px solid  ${props => props.theme.colors.border};\r\n`;","import * as yup from 'yup';\r\nimport { nanoid } from 'nanoid';\r\nimport { Formik, Field } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from 'redux/auth/operations';\r\nimport { LoginFormStyled } from './LoginForm.styled';\r\nimport { FormGroup, ErrorMessageStyled, FormButton } from 'components/PhoneBook/PhoneBook.styled';\r\n\r\nconst LoginForm = () => {\r\n    const emailId = nanoid(); \r\n    const passwordId = nanoid(); \r\n    const dispatch = useDispatch();\r\n\r\n    const initVal = { \r\n        email: '',\r\n        password: '',\r\n    };\r\n\r\n    const handleSubmit = async (values, actions) => {\r\n        await dispatch(login(values));\r\n        actions.resetForm();\r\n    };\r\n    let schema = yup.object().shape({\r\n        email: yup.string().required('Required'),\r\n        password: yup.string().required('Required'),\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initVal}\r\n            validationSchema={schema}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <LoginFormStyled>\r\n                <FormGroup>\r\n                    <label htmlFor={emailId}>\r\n                        Email\r\n                        <Field type=\"email\" id={emailId} name=\"email\" placeholder=\"mail@mail.com\" />\r\n                    </label>\r\n                    <ErrorMessageStyled name=\"email\" component='div'/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <label htmlFor={passwordId}>\r\n                        Password\r\n                        <Field type=\"text\" id={passwordId} name=\"password\" placeholder=\"Enter Password\" />\r\n                    </label>\r\n                    <ErrorMessageStyled name=\"password\" component='div'/>\r\n                </FormGroup>\r\n                <FormButton type=\"submit\">Log in</FormButton>\r\n            </LoginFormStyled>\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default LoginForm;","import LoginForm from 'components/LoginForm';\r\nimport { Container } from \"components/App/App.styled\";\r\nimport Section from 'components/Section';\r\n\r\nconst Login = () => {\r\n    return(\r\n        <Container>\r\n            <Section title='Login page'>\r\n                <LoginForm />\r\n            </Section>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Login;"],"names":["PhoneBookFormStyled","styled","Form","props","theme","radii","cardBorderRadius","colors","border","FormGroup","ErrorMessageStyled","ErrorMessage","dangerColor","dangerBg","FormButton","button","PhoneBookListStyled","PhoneBookListEmpty","ListButton","SectionStyled","cardBgColor","SectionTitle","title","children","LoginFormStyled","emailId","nanoid","passwordId","dispatch","useDispatch","handleSubmit","values","actions","login","resetForm","schema","yup","shape","email","required","password","initialValues","validationSchema","onSubmit","htmlFor","type","id","name","placeholder","component","Section"],"sourceRoot":""}